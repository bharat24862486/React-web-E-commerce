{"ast":null,"code":"import { useContext, useRef, useInsertionEffect } from 'react';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { animateValue } from '../animation/js/index.mjs';\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    isStatic\n  } = useContext(MotionConfigContext);\n  const activeSpringAnimation = useRef(null);\n  const value = useMotionValue(isMotionValue(source) ? source.get() : source);\n  const stopAnimation = () => {\n    if (activeSpringAnimation.current) {\n      activeSpringAnimation.current.stop();\n    }\n  };\n  useInsertionEffect(() => {\n    return value.attach((v, set) => {\n      /**\n       * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n       * at that level, but this will work for now\n       */\n      if (isStatic) return set(v);\n      stopAnimation();\n      activeSpringAnimation.current = animateValue({\n        keyframes: [value.get(), v],\n        velocity: value.getVelocity(),\n        type: \"spring\",\n        restDelta: 0.001,\n        restSpeed: 0.01,\n        ...config,\n        onUpdate: set\n      });\n      return value.get();\n    }, stopAnimation);\n  }, [JSON.stringify(config)]);\n  useIsomorphicLayoutEffect(() => {\n    if (isMotionValue(source)) {\n      return source.on(\"change\", v => value.set(parseFloat(v)));\n    }\n  }, [value]);\n  return value;\n}\nexport { useSpring };","map":{"version":3,"names":["useContext","useRef","useInsertionEffect","isMotionValue","useMotionValue","MotionConfigContext","useIsomorphicLayoutEffect","animateValue","useSpring","source","config","arguments","length","undefined","isStatic","activeSpringAnimation","value","get","stopAnimation","current","stop","attach","v","set","keyframes","velocity","getVelocity","type","restDelta","restSpeed","onUpdate","JSON","stringify","on","parseFloat"],"sources":["E:/Desktop/reactpsc/node_modules/framer-motion/dist/es/value/use-spring.mjs"],"sourcesContent":["import { useContext, useRef, useInsertionEffect } from 'react';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { animateValue } from '../animation/js/index.mjs';\n\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source, config = {}) {\n    const { isStatic } = useContext(MotionConfigContext);\n    const activeSpringAnimation = useRef(null);\n    const value = useMotionValue(isMotionValue(source) ? source.get() : source);\n    const stopAnimation = () => {\n        if (activeSpringAnimation.current) {\n            activeSpringAnimation.current.stop();\n        }\n    };\n    useInsertionEffect(() => {\n        return value.attach((v, set) => {\n            /**\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n             * at that level, but this will work for now\n             */\n            if (isStatic)\n                return set(v);\n            stopAnimation();\n            activeSpringAnimation.current = animateValue({\n                keyframes: [value.get(), v],\n                velocity: value.getVelocity(),\n                type: \"spring\",\n                restDelta: 0.001,\n                restSpeed: 0.01,\n                ...config,\n                onUpdate: set,\n            });\n            return value.get();\n        }, stopAnimation);\n    }, [JSON.stringify(config)]);\n    useIsomorphicLayoutEffect(() => {\n        if (isMotionValue(source)) {\n            return source.on(\"change\", (v) => value.set(parseFloat(v)));\n        }\n    }, [value]);\n    return value;\n}\n\nexport { useSpring };\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,MAAM,EAAEC,kBAAkB,QAAQ,OAAO;AAC9D,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,mBAAmB,QAAQ,oCAAoC;AACxE,SAASC,yBAAyB,QAAQ,oCAAoC;AAC9E,SAASC,YAAY,QAAQ,2BAA2B;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,SAASA,CAACC,MAAM,EAAe;EAAA,IAAbC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAClC,MAAM;IAAEG;EAAS,CAAC,GAAGd,UAAU,CAACK,mBAAmB,CAAC;EACpD,MAAMU,qBAAqB,GAAGd,MAAM,CAAC,IAAI,CAAC;EAC1C,MAAMe,KAAK,GAAGZ,cAAc,CAACD,aAAa,CAACM,MAAM,CAAC,GAAGA,MAAM,CAACQ,GAAG,EAAE,GAAGR,MAAM,CAAC;EAC3E,MAAMS,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIH,qBAAqB,CAACI,OAAO,EAAE;MAC/BJ,qBAAqB,CAACI,OAAO,CAACC,IAAI,EAAE;IACxC;EACJ,CAAC;EACDlB,kBAAkB,CAAC,MAAM;IACrB,OAAOc,KAAK,CAACK,MAAM,CAAC,CAACC,CAAC,EAAEC,GAAG,KAAK;MAC5B;AACZ;AACA;AACA;MACY,IAAIT,QAAQ,EACR,OAAOS,GAAG,CAACD,CAAC,CAAC;MACjBJ,aAAa,EAAE;MACfH,qBAAqB,CAACI,OAAO,GAAGZ,YAAY,CAAC;QACzCiB,SAAS,EAAE,CAACR,KAAK,CAACC,GAAG,EAAE,EAAEK,CAAC,CAAC;QAC3BG,QAAQ,EAAET,KAAK,CAACU,WAAW,EAAE;QAC7BC,IAAI,EAAE,QAAQ;QACdC,SAAS,EAAE,KAAK;QAChBC,SAAS,EAAE,IAAI;QACf,GAAGnB,MAAM;QACToB,QAAQ,EAAEP;MACd,CAAC,CAAC;MACF,OAAOP,KAAK,CAACC,GAAG,EAAE;IACtB,CAAC,EAAEC,aAAa,CAAC;EACrB,CAAC,EAAE,CAACa,IAAI,CAACC,SAAS,CAACtB,MAAM,CAAC,CAAC,CAAC;EAC5BJ,yBAAyB,CAAC,MAAM;IAC5B,IAAIH,aAAa,CAACM,MAAM,CAAC,EAAE;MACvB,OAAOA,MAAM,CAACwB,EAAE,CAAC,QAAQ,EAAGX,CAAC,IAAKN,KAAK,CAACO,GAAG,CAACW,UAAU,CAACZ,CAAC,CAAC,CAAC,CAAC;IAC/D;EACJ,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EACX,OAAOA,KAAK;AAChB;AAEA,SAASR,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}