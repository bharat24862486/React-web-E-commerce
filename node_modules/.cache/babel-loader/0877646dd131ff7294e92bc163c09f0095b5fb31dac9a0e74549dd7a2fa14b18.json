{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\reactpsc\\\\src\\\\Component\\\\SideNavbar.jsx\",\n  _s = $RefreshSig$();\nimport { Checkbox, CheckboxGroup } from '@chakra-ui/react';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SideNavbar() {\n  _s();\n  const [searchParam, setSearchParam] = useSearchParams();\n  let initialValue = searchParam.getAll(\"gender\");\n  console.log('params', searchParam.getAll(\"gender\"));\n  const [oldvalue, setValue] = useState(initialValue || []);\n  function handleChange(e) {\n    const storeTarget = e.target.value;\n    // console.log(oldvalue)\n    const newArray = [...oldvalue];\n    if (oldvalue.includes(storeTarget)) {\n      newArray.splice(newArray.indexOf(storeTarget), 1);\n    } else {\n      newArray.push(storeTarget);\n    }\n    setValue(newArray);\n  }\n  useEffect(() => {\n    let params = {\n      gender: oldvalue\n    };\n    setSearchParam(params);\n  }, [oldvalue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        fontSize: \"25px\"\n      },\n      children: \"Filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n        colorScheme: \"green\",\n        spacing: \"1rem\",\n        value: \"Man\",\n        onChange: handleChange,\n        isChecked: searchParam.getAll(\"gender\").includes(\"Man\"),\n        children: \"Man\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n        colorScheme: \"green\",\n        spacing: \"1rem\",\n        value: \"Women\",\n        onChange: handleChange,\n        children: \"Women\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n        colorScheme: \"green\",\n        spacing: \"1rem\",\n        value: \"Kids\",\n        onChange: handleChange,\n        children: \"Kids\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(SideNavbar, \"F0r1Hv4uiYgDm1gnvt/IzZL2RUA=\", false, function () {\n  return [useSearchParams];\n});\n_c = SideNavbar;\nexport default SideNavbar;\nvar _c;\n$RefreshReg$(_c, \"SideNavbar\");","map":{"version":3,"names":["Checkbox","CheckboxGroup","useEffect","useState","useSearchParams","jsxDEV","_jsxDEV","SideNavbar","_s","searchParam","setSearchParam","initialValue","getAll","console","log","oldvalue","setValue","handleChange","e","storeTarget","target","value","newArray","includes","splice","indexOf","push","params","gender","children","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","colorScheme","spacing","onChange","isChecked","_c","$RefreshReg$"],"sources":["E:/Desktop/reactpsc/src/Component/SideNavbar.jsx"],"sourcesContent":["import { Checkbox, CheckboxGroup } from '@chakra-ui/react'\r\nimport { useEffect, useState } from 'react'\r\nimport { useSearchParams } from 'react-router-dom'\r\n\r\nfunction SideNavbar() {\r\n\r\n    const [searchParam,setSearchParam] = useSearchParams()\r\n\r\n    let initialValue = searchParam.getAll(\"gender\")\r\n\r\n    console.log('params',searchParam.getAll(\"gender\"))\r\n\r\n    const [oldvalue,setValue] = useState(initialValue||[])\r\n\r\n    function handleChange(e){\r\n        const storeTarget = e.target.value\r\n        // console.log(oldvalue)\r\n        const newArray = [...oldvalue]\r\n\r\n        if(oldvalue.includes(storeTarget)){\r\n            newArray.splice(newArray.indexOf(storeTarget),1)\r\n        } else{\r\n            newArray.push(storeTarget)\r\n        }\r\n\r\n        setValue(newArray)\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let params = {\r\n            gender:oldvalue\r\n        }\r\n\r\n        setSearchParam(params)\r\n    },[oldvalue])\r\n\r\n    return (\r\n\r\n        <div>\r\n            <h2 style={{fontSize:\"25px\"}}>Filter</h2>\r\n            <div>\r\n                <Checkbox colorScheme='green' spacing='1rem' value={\"Man\"} onChange={handleChange} isChecked={searchParam.getAll(\"gender\").includes(\"Man\")}>Man</Checkbox>\r\n            </div>\r\n            <div>\r\n                <Checkbox colorScheme='green' spacing='1rem' value={\"Women\"} onChange={handleChange}>\r\n                    Women\r\n                </Checkbox>\r\n            </div>\r\n            <div>\r\n                <Checkbox colorScheme='green' spacing='1rem' value={\"Kids\"} onChange={handleChange}>\r\n                    Kids\r\n                </Checkbox>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SideNavbar"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}